BEGIN;

-- 1.Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ.
-- Вывести атрибуты: Н_ЛЮДИ.ФАМИЛИЯ, Н_ВЕДОМОСТИ.ИД.
-- Фильтры (AND):
-- a) Н_ЛЮДИ.ИД = 163484.
-- b) Н_ВЕДОМОСТИ.ИД > 1490007.
-- Вид соединения: INNER JOIN.
SELECT
	"Н_ЛЮДИ"."ФАМИЛИЯ",
	"Н_ВЕДОМОСТИ"."ИД"
FROM
	"Н_ЛЮДИ"
	INNER JOIN "Н_ВЕДОМОСТИ" ON "Н_ЛЮДИ"."ИД" = "Н_ВЕДОМОСТИ"."ИД"
WHERE
	"Н_ЛЮДИ"."ИД" = 163484
	AND "Н_ВЕДОМОСТИ"."ИД" > 1490007;

-- 2.Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_ОБУЧЕНИЯ, Н_УЧЕНИКИ.
-- Вывести атрибуты: Н_ЛЮДИ.ИМЯ, Н_ОБУЧЕНИЯ.ЧЛВК_ИД, Н_УЧЕНИКИ.ИД.
-- Фильтры: (AND)
-- a) Н_ЛЮДИ.ОТЧЕСТВО = Сергеевич.
-- b) Н_ОБУЧЕНИЯ.НЗК > 933232.
-- c) Н_УЧЕНИКИ.НАЧАЛО < 2011-11-21.
-- Вид соединения: INNER JOIN.
SELECT
	"Н_ЛЮДИ"."ИМЯ",
	"Н_ОБУЧЕНИЯ"."ЧЛВК_ИД",
	"Н_УЧЕНИКИ"."ИД"
FROM
	"Н_ЛЮДИ"
	INNER JOIN "Н_ОБУЧЕНИЯ" ON "Н_ЛЮДИ"."ИД" = "Н_ОБУЧЕНИЯ"."ЧЛВК_ИД"
	INNER JOIN "Н_УЧЕНИКИ" ON "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ЛЮДИ"."ИД"
WHERE
	"Н_ЛЮДИ"."ОТЧЕСТВО" = 'Сергеевич'
	AND CAST("Н_ОБУЧЕНИЯ"."НЗК" AS INTEGER) > 933232
	AND "Н_УЧЕНИКИ"."НАЧАЛО" < '2011-11-21';

-- 3.Вывести число студентов ФКТИУ, которые старше 25 лет.
-- Ответ должен содержать только одно число.
SELECT
	COUNT(*)
FROM
	"Н_ЛЮДИ"
	JOIN "Н_УЧЕНИКИ" ON "Н_ЛЮДИ"."ИД" = "Н_УЧЕНИКИ"."ЧЛВК_ИД"
	JOIN "Н_ГРУППЫ_ПЛАНОВ" ON "Н_УЧЕНИКИ"."ГРУППА" = "Н_ГРУППЫ_ПЛАНОВ"."ГРУППА"
	JOIN "Н_ПЛАНЫ" ON "Н_ГРУППЫ_ПЛАНОВ"."ПЛАН_ИД" = "Н_ПЛАНЫ"."ИД"
	JOIN "Н_ОТДЕЛЫ" ON "Н_ПЛАНЫ"."ОТД_ИД" = "Н_ОТДЕЛЫ"."ИД"
WHERE
	"Н_ОТДЕЛЫ"."КОРОТКОЕ_ИМЯ" = 'КТИУ'
	AND EXTRACT(
		YEAR
		FROM
			AGE (CURRENT_DATE, "Н_ЛЮДИ"."ДАТА_РОЖДЕНИЯ")
	) > 25;

-- 4.В таблице Н_ГРУППЫ_ПЛАНОВ найти номера планов, по которым обучается (обучалось) 
-- более 2 групп на кафедре вычислительной техники.
-- Для реализации использовать подзапрос.
SELECT
	Н_ГРУППЫ_ПЛАНОВ."ПЛАН_ИД"
FROM
	"Н_ГРУППЫ_ПЛАНОВ"
	JOIN "Н_ПЛАНЫ" ON Н_ГРУППЫ_ПЛАНОВ."ПЛАН_ИД" = Н_ПЛАНЫ."ИД"
	JOIN "Н_ОТДЕЛЫ" ON Н_ПЛАНЫ."ОТД_ИД" = Н_ОТДЕЛЫ."ИД"
WHERE
	Н_ОТДЕЛЫ."ИМЯ_В_ИМИН_ПАДЕЖЕ" = 'Вычислительная техника'
GROUP BY
	Н_ГРУППЫ_ПЛАНОВ."ПЛАН_ИД"
HAVING
	COUNT(Н_ГРУППЫ_ПЛАНОВ."ГРУППА") > 2;

-- 5.Выведите таблицу со средним возрастом студентов во всех группах (Группа, Средний возраст), где средний возраст меньше минимального возраста в группе 1100.
SELECT
	"Н_УЧЕНИКИ"."ГРУППА",
	AVG(DATE_PART('year', AGE ("Н_ЛЮДИ"."ДАТА_РОЖДЕНИЯ")))
FROM
	"Н_ЛЮДИ"
	JOIN "Н_УЧЕНИКИ" ON "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ЛЮДИ"."ИД"
GROUP BY
	"Н_УЧЕНИКИ"."ГРУППА"
HAVING
	AVG(DATE_PART('year', AGE ("Н_ЛЮДИ"."ДАТА_РОЖДЕНИЯ"))) < (
		SELECT
			MIN(DATE_PART('year', AGE ("Н_ЛЮДИ"."ДАТА_РОЖДЕНИЯ")))
		FROM
			"Н_ЛЮДИ"
			JOIN "Н_УЧЕНИКИ" ON "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ЛЮДИ"."ИД"
		WHERE
			"Н_УЧЕНИКИ"."ГРУППА" = '1100'
	);

-- 6.Получить список студентов, отчисленных до первого сентября 2012 года с очной формы обучения. В результат включить:
-- номер группы;
-- номер, фамилию, имя и отчество студента;
-- номер пункта приказа;
-- Для реализации использовать подзапрос с IN.
SELECT
	"Н_УЧЕНИКИ"."ГРУППА",
	"Н_ЛЮДИ"."ИД" AS "Номер",
	"Н_ЛЮДИ"."ФАМИЛИЯ",
	"Н_ЛЮДИ"."ИМЯ",
	"Н_ЛЮДИ"."ОТЧЕСТВО",
	"Н_УЧЕНИКИ"."П_ПРКОК_ИД"
FROM
	"Н_ЛЮДИ"
	JOIN "Н_УЧЕНИКИ" ON "Н_ЛЮДИ"."ИД" = "Н_УЧЕНИКИ"."ЧЛВК_ИД"
	JOIN "Н_ПЛАНЫ" ON "Н_УЧЕНИКИ"."ПЛАН_ИД" = "Н_ПЛАНЫ"."ИД"
	JOIN "Н_ВИДЫ_ОБУЧЕНИЯ" ON "Н_ПЛАНЫ"."ФО_ИД" = "Н_ВИДЫ_ОБУЧЕНИЯ"."ИД"
WHERE
	"Н_УЧЕНИКИ"."ИД" IN (
		SELECT
			"Н_УЧЕНИКИ"."ИД"
		FROM
			"Н_УЧЕНИКИ"
			JOIN "Н_ПЛАНЫ" ON "Н_УЧЕНИКИ"."ПЛАН_ИД" = "Н_ПЛАНЫ"."ИД"
			JOIN "Н_ВИДЫ_ОБУЧЕНИЯ" ON "Н_ПЛАНЫ"."ФО_ИД" = "Н_ВИДЫ_ОБУЧЕНИЯ"."ИД"
		WHERE
			"Н_УЧЕНИКИ"."ПРИЗНАК" = 'отчисл' -- 学生状态为“отчисл”（已开除）
			AND "Н_УЧЕНИКИ"."СОСТОЯНИЕ" = 'утвержден' -- 状态为“утвержден”（已确认）
			AND DATE ("Н_УЧЕНИКИ"."КОНЕЦ") < '2012-09-01' -- 结束日期早于2012年9月1日
			AND "Н_ВИДЫ_ОБУЧЕНИЯ"."НАИМЕНОВАНИЕ" = 'очная' -- 学习形式为“очная”（全日制）
	);

-- 7.Вывести список студентов, имеющих одинаковые фамилии, но не совпадающие даты рождения.
SELECT DISTINCT
	A."ИД",
	A."ФАМИЛИЯ",
	A."ДАТА_РОЖДЕНИЯ"
FROM
	"Н_ЛЮДИ" A
	JOIN "Н_ЛЮДИ" B ON A."ФАМИЛИЯ" = B."ФАМИЛИЯ"
	AND A."ДАТА_РОЖДЕНИЯ" <> B."ДАТА_РОЖДЕНИЯ"
	AND A."ИД" <> B."ИД"
ORDER BY
	A."ФАМИЛИЯ";

END;
